label <-c(label_train, label_test)
str(subject)
str(set)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
subject <- c(subject_train, subject_test)
set <- c(set_train, set_test)
label <-c(label_train, label_test)
?c
subject <- as.vector(subject_train, subject_test)
set <- as.vector(set_train, set_test)
label <-as.vector(label_train, label_test)
?as.vector
subject <- as.vector(subject_train, subject_test, recursive=T)
?c
subject <- as.vector(subject_train, subject_test)
subject <- c(subject_train, subject_test, recursive=T)
str(subject)
unique(subject)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
unique(set)
unique(label)
merged <- cbind("subject"= subject, "set"= set,"label"=label)
str(merged)
merged <- data.frame()
merged <- cbind(merged, "subject"= subject, "set"= set,"label"=label)
merged <- cbind(subject= subject, set= set,label=label)
str(merged)
merged <- data.frame(subject= subject, label=label, set= set)
str(merged)
?data.frame
merged <- data.frame(subject= subject, label=label, set= set, stringAsFactors=F)
?data.frame
str(merged)
setwd("~/R/RFiles/3GettingCleaning/project")
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
##read train data
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
#merge test and training vectors
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
#merge vectors into table
merged <- data.frame(subject= subject, label=label, set= set)
str(merged)
set <- as.numeric(set)
set <- as.character(set)
set <- as.numeric(as.character(set))
merged <- data.frame(subject= subject, label=label, set= set)
str(merged)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
##read train data
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
#merge test and training vectors
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- as.numeric(as.character(set))
#merge vectors into table
merged <- data.frame(subject= subject, label=label, set= set)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
##read train data
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
#merge test and training vectors
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- as.character(set)
merged <- data.frame(subject= subject, label=label, set= set)
str(merged)
set <- unlist(set)
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- unlist(set)
merged <- data.frame(subject= subject, label=label, set= set)
str(merged)
str(set)
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- unlist(set)
set <- as.numeric(as.character(unlist(set)))
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
##read train data
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
#merge test and training vectors
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- as.character(unlist(set)
#merge vectors into table
merged <- data.frame(subject= subject, label=label, set= set)
str(set)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
##read train data
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
#merge test and training vectors
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- as.character(unlist(set)
#merge vectors into table
merged <- data.frame(subject= subject, label=label, set= set)
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set <- as.character(unlist(set))
#merge vectors into table
merged <- data.frame(subject= subject, label=label, set= set)
summary(merged)
head(merged)
unique(merged$subject)
length(unique(merged$subject))
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", stringsAsFactors = F)
str(features)
summary(subject)
table(subject)
table(set)
table(label)
str(set)
View(set_test)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set[1]
length(subject)
?read.matrix
set_test <- as.matrix(read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F))
str(set_test)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
dim(set)
dim(set_train)
str(set_train)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="e", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="e", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="e", stringsAsFactors = F)
set <- c(set_train, set_test, recursive=T)
View(set_test)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="-", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="-e", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="-", stringsAsFactors = F)
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
?dims
?dim
dim(set)
subject <- c(subject_train, subject_test, recursive=T)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="e-00", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep=" ", stringsAsFactors = F)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep=" ", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="\t", stringsAsFactors = F)
label_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/Y_test.txt",
header=F, sep=" ", stringsAsFactors = F)
subject_train<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/subject_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
header=F, sep="\t", stringsAsFactors = F)
label_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/Y_train.txt",
header=F, sep=" ", stringsAsFactors = F)
set <- c(set_train, set_test, recursive=T)
label <- c(label_train, label_test, recursive=T)
merged <- data.frame(subject= subject, label=label, set= set)
subject <- c(subject_train, subject_test, recursive=T)
merged <- data.frame(subject= subject, label=label, set= set)
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", stringsAsFactors = F)
View(features)
erged <- data.frame(subject= subject, condition=label, set= set)
merged <- data.frame(subject= subject, condition=label, movement.data= set)
merged <- data.frame(c(subject= subject, condition=label, movement.data= set), stringsAsFactors=F)
str(merged)
merged <- data.frame(subject= subject, condition=label, movement.data= set)
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", stringsAsFactors = F)
View(erged)
View(merged)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep="-", stringsAsFactors = F)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
header=F, sep=" ", stringsAsFactors = F)
View(set_test)
set_test <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/X_test.txt",
comment.char = "",colClasses="numeric")
set_train <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/train/X_train.txt",
comment.char = "",colClasses="numeric")
set <- rbind(set_train, set_test)
View(set)
merged <- cbind(data.frame(subject=subject, condition=label), movement.data=set)
View(merged)
?read.table
View(features)
?t
features <- t(features)
view(features)
View(features)
featuresXset<- rbind(featues, set)
featuresXset<- rbind(features, set)
warnings
warnings()
View(featuresXset)
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", stringsAsFactors = F)
featuresXset<- rbind(t(features), set)
warnings()
View(features)
View(featuresXset)
View(featuresXset)
View(featuresXset)
featuresXset<- rbind(features, set)
str(set)
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", colClasses="character")
View(features)
View(features)
?aggregate
#merge vectors into table
merged <- cbind(data.frame(subject=subject, condition=label), movement.data=set)
View(merged)
View(merged)
?grep
features <- read.table(
"~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/features.txt",
header=F, sep=" ", colClasses="character")
grep(features[,2], "mean|std", ignore.case=F, value=T)
greplist<- c((grep(features[,2], "mean", ignore.case=F, value=T)), (grep(features[,2], "std", ignore.case=F, value=T))
)
features[,2]
greplist<- grep(features[,2], "mean", ignore.case=F, value=T)
greplist<- grep((features[,2]), "mean", ignore.case=F, value=T)
greplist<- grep(featnames, "mean|std", ignore.case=F, value=T)
featnames <- features[,2]
greplist<- grep(featnames, "mean|std", ignore.case=F, value=T)
greplist<- grep("mean|std", features[,2], ignore.case=F, value=T)
greplist
greplist<- grep("mean(|std(", features[,2], ignore.case=F, value=T)
greplist<- grep("mean[(]|std[(]", features[,2], ignore.case=F, value=T)
greplist
greplist<- grep("mean[(]|std[(]", features[,2], ignore.case=F, value=F)
greplist
listshift <- greplist + 2
listshift
merged[, paste(listshift, sep=",")]
listshift <- paste(listshift, sep=",")
listshift
listshift <- greplist + 2
merged[, c(listshift)]
c(listshift)
merged_cut <- merged[, c(1, 2, listshift)]
View(merged_cut)
merged_cut["1", 2] <- Walking
merged_cut["1", 2] <- "Walking"
merged_cut[,2]
merged_cut["1", 2] <- "Walking"
merged_cut["1", 2]
merged_cut[, 2]
head(merged_cut[, 2])
merged_cut <- merged[, c(1, 2, listshift)]
merged_cut["condition" == 1, 2] <- "Walking"
head(merged_cut[, 2])
View(merged_cut)
merged_cut["condition" == 1, 2] <- "Walking"
merged_cut["condition" == "1", 2] <- "Walking"
View(merged_cut)
merged_cut <- merged[, c(1, 2, listshift)]
as.factor(mergedcut$condition)
as.factor(merged_cut$condition)
levels(merged_cut$condition) <- c("walking", "Walking Upstairs", "Walking Downstairs", "Sitting", "Standing", "Laying")
View(merged_cut)
View(merged_cut)
View(merged_cut)
str(merged_cut)
as.factor(as.character(merged_cut$condition))
levels(merged_cut$condition) <- c("walking", "Walking Upstairs", "Walking Downstairs", "Sitting", "Standing", "Laying")
View(merged_cut)
merged_cut <- merged[, c(1, 2, listshift)]
merged_cut["condition"==1, 2] = "walking"
View(merged_cut)
str(merged_cut)
merged_cut["condition"=="1", 2] = "walking"
View(merged_cut)
merged_cut[, 2] <- "1"="Walking"
merged_cut[, 2] <- ("1"="Walking")
View(merged_cut)
merged_cut <- merged[, c(1, 2, listshift)]
merged_cut$condition[merged_cut$condition == "1"] <- "Walking"
View(merged_cut)
View(merged_cut)
merged_cut$condition[merged_cut$condition == "1"] <- "Walking"
merged_cut$condition[merged_cut$condition == "2"] <- "Walking Upstairs"
merged_cut$condition[merged_cut$condition == "3"] <- "Walking Downstairs"
merged_cut$condition[merged_cut$condition == "4"] <- "Sitting"
merged_cut$condition[merged_cut$condition == "5"] <- "Standing"
merged_cut$condition[merged_cut$condition == "6"] <- "Laying"
View(merged_cut)
View(merged_cut)
varnames<- grep("mean[(]|std[(]", features[,2], ignore.case=F, value=T)
##transform to a comma separated list of characters with paste()
paste(varnames, sep=",")
paste(varnames, sep=",")
paste(varnames, sep=",")
varlist <- paste(varnames, sep=",")
varlist
colnames(merged_cut) <- c("subject", "condition", varlist)
View(merged_cut)
View(merged_cut)
greplist<- grep("mean[(]|std[(]", features[,2], ignore.case=F, value=F)
listshift <- greplist + 2
##subset columns (#1 & #2 are subject and activity labels)
merged_cut <- merged[, c(1, 2, listshift)]
##re-label condition according to activity_labels.txt
merged_cut$condition[merged_cut$condition == "1"] <- "Walking"
merged_cut$condition[merged_cut$condition == "2"] <- "Walking Upstairs"
merged_cut$condition[merged_cut$condition == "3"] <- "Walking Downstairs"
merged_cut$condition[merged_cut$condition == "4"] <- "Sitting"
merged_cut$condition[merged_cut$condition == "5"] <- "Standing"
merged_cut$condition[merged_cut$condition == "6"] <- "Laying"
varnames<- grep("mean[(]|std[(]", features[,2], ignore.case=F, value=T)
colnames(merged_cut) <- c("subject", "condition", varlist)
View(merged_cut)
View(merged_cut)
View(merged_cut)
mergecutmelt <- melt(merged_cut, id=c("subject", "condition"), measure.vars=c(varlist)
)
library(reshape2)
mergecutmelt <- melt(merged_cut, id=c("subject", "condition"), measure.vars=c(varlist))
head(mergecutmelt)
mergecutcast <- dcast(mergecutmelt, subject ~ variable, mean)
mergecutcast
View(mergecutcast)
mergecutmelt <- melt(merged_cut, id=c("subject", "condition"), measure.vars=c(varlist))
mergecutcast <- dcast(mergecutmelt, subject + condition ~ variable, mean)
View(mergecutcast)
View(mergecutcast)
?write.table
write.table(mergecutcast, file="tidydata1.txt")
write.table(merged_cut, file="tidydata1.txt")
write.table(mergecutcast, file="tidydata2.txt")
View(mergecutcast)
View(mergecutmelt)
View(merged_cut)
View(subject_train)
subject_test<- read.table(
file ="~/R/RFiles/3GettingCleaning/project/UCI HAR Dataset/test/subject_test.txt",
header=F, sep=" ", stringsAsFactors = F)
str(subject_test)
varlist <- paste(varnames, sep=",")
colnames(merged_cut) <- c("subject", "activity", varlist)
##melt data frame
library(reshape2)
mergecutmelt <- melt(merged_cut, id=c("subject", "activity"), measure.vars=c(varlist))
##cast by subject and condition for variable mean
mergecutcast <- dcast(mergecutmelt, subject + activity ~ variable, mean)
##save merged_cut and mergecutcast as txt files
write.table(merged_cut, file="tidydata1.txt")
write.table(mergecutcast, file="tidydata2.txt")
##print tables
merged_cut
mergecutcast
View(merged_cut)
View(mergecutcast)
View(mergecutcast)
